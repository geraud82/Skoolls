const axios = require('axios');
const jwt = require('jsonwebtoken');
const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '.env') });

// V√©rifier que les variables d'environnement sont correctement charg√©es
console.log('JWT_SECRET est d√©fini:', !!process.env.JWT_SECRET);

// Fonction pour cr√©er un token JWT pour un utilisateur √©cole
const createSchoolToken = (schoolId) => {
  return jwt.sign(
    { id: schoolId, role: 'ecole' },
    process.env.JWT_SECRET,
    { expiresIn: '1h' }
  );
};

// Fonction pour tester la route /enrollments/school
async function testSchoolEnrollments() {
  try {
    console.log('Test de la route /enrollments/school...');
    
    // Cr√©er un token pour l'√©cole avec ID 2 (√âcole Dev)
    const schoolId = 2; // ID de l'√©cole qui a des inscriptions
    const token = createSchoolToken(schoolId);
    
    console.log(`Token cr√©√© pour l'√©cole avec ID ${schoolId}`);
    
    // Faire une requ√™te √† la route /enrollments/school
    const response = await axios.get('http://localhost:3005/api/enrollments/school', {
      headers: {
        Authorization: `Bearer ${token}`
      }
    });
    
    console.log('‚úÖ R√©ponse re√ßue avec succ√®s');
    console.log(`üìä Nombre d'inscriptions: ${response.data.length}`);
    
    // Afficher les d√©tails des inscriptions
    if (response.data.length > 0) {
      console.log('\nD√©tails des inscriptions:');
      response.data.forEach((enrollment, index) => {
        console.log(`\nInscription ${index + 1}:`);
        console.log('Propri√©t√©s disponibles:', Object.keys(enrollment).join(', '));
        console.log(JSON.stringify(enrollment, null, 2));
      });
    } else {
      console.log('‚ùå Aucune inscription trouv√©e pour cette √©cole.');
    }
    
  } catch (err) {
    console.error('‚ùå Erreur lors du test:', err.message);
    
    if (err.response) {
      console.error('D√©tails de l\'erreur:');
      console.error(`Status: ${err.response.status}`);
      console.error('Data:', err.response.data);
    }
  }
}

testSchoolEnrollments();
